package me.jershdervis.monitorj.ui.components;

import java.io.IOException;
import javax.swing.table.DefaultTableModel;

import me.jershdervis.monitorj.MonitorJ;
import me.jershdervis.monitorj.server.ServerManager;
import me.jershdervis.monitorj.util.ResourceLoader;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Josh
 */
public class AddSocketForm extends javax.swing.JFrame {
    
    private final me.jershdervis.monitorj.ui.UserInterface parentScreen;

    /**
     * Creates new form AddSocketForm
     */
    public AddSocketForm(me.jershdervis.monitorj.ui.UserInterface parent) {
        this.parentScreen = parent;
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addSocketButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        portSpinner = new javax.swing.JSpinner();
        portLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        descLabel = new javax.swing.JLabel();
        descTextField = new javax.swing.JTextField();

        setTitle("Add Socket");

        addSocketButton.setText("Add Socket");
        addSocketButton.addActionListener(evt -> addSocketButtonActionPerformed(evt));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(evt -> cancelButtonActionPerformed(evt));

        portSpinner.setModel(new javax.swing.SpinnerNumberModel(1024, 1024, 65535, 1));

        portLabel.setText("Port:");

        nameLabel.setText("Name");

        nameTextField.setText("Socket 1");

        descLabel.setText("Description");

        descTextField.setText("Main employee computer socket");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addSocketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameTextField)
                    .addComponent(portSpinner)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(portLabel)
                            .addComponent(descLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(descTextField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(portLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(descLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSocketButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void addSocketButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String name = nameTextField.getText();
            int port = (Integer) portSpinner.getValue();
            String desc = descTextField.getText();

            System.out.println("Listening on port: " + port);
            ServerManager.instance.listenOnPort(port);

            DefaultTableModel model = (DefaultTableModel) parentScreen.socketTable.getModel();
            model.addRow(new Object[]{name, String.valueOf(port), desc});

            MonitorJ.getInstance().getFileManager().saveSocketValue(name, port, desc);
        } catch (IOException e) {
            System.out.println("Failed to host server on port: " + (int) portSpinner.getValue());
            e.printStackTrace();
        }
        setVisible(false);
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
    }

    private javax.swing.JButton addSocketButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel descLabel;
    private javax.swing.JTextField descTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel portLabel;
    private javax.swing.JSpinner portSpinner;
}
